General Javascript
npx create-react-app .
Use backticks (``) not '' for string templates
State hooks return [CURRENT_STATE, FUNCTION_UPDATES_THE_STATE]
HTTPS creates CORS error when using JSON-Server, use HTTP
Use { () => Object } to add objects to onClick
npm nodemon enables live-refresh

Part 1
    - Part C
        - Rendering the component
        - Sub components
        - Creating and maintaining state
        - Event handling (onClick, butttons)
        - Prop structuring/destructuring
        - Turning things into components
        - Creating refresh method to render page (less code bloat)
    - Part D
        - Using and maintaining separate states
        - StateHooks
        - Turning everything into a smaller component
        - Using arrays in JS for state
        - Conditional rendering
        - Debugging (use React extension)
Part 2
    - Part A
        - Using JS arrays and collections to render in React
        - Map function
        - Refactoring
        - Turning everything into a component
    - Part B
        - Adding custom functions on Forms, buttons, etc.
        - The event parameter in addNote is theh event that triggered it
        - newNote uses state from the form field and reflects the current input.
        - Conditional HTML
        - Creating and sending data using objects
        - Using event handlers and forms
    - Part C
        - Experience using axios dependancy
        - Promises: Object representing the eventual completion of an operation
            * Pending: Final value/operation is unavailable 
            * Fulfilled/Rejected
        - Using react effect hooks
            * Effects run after every completed render, but CAN be run on command
    - Part D
        - ... notation. ... gets an object's properties, anything after that is altered
            - const changedNote = { ...note, important: !note.important }
        - Handling front end -> backend synchronization using services + axios
        - Async, promises
Part 3
    - Part A
        - Express get methods take 2 params, HTML Requeust and how to Respond to it (response)
        - Can return things in JSON format using .json (baked into express)
        - JSON is returned as a STRING this way, not an object like in parts 1 and 2
            - Because of this, have to convert responses into proper types
        - Content-type headers are very important, backend wont bother if it isnt correct
        - Routing, middleware, data validation, JSON
    Part B
        - CORS allows applications to use data from multiple ports
            - CORS is a universal standard, use middleware for this project
        - Deployed back end, but need to tell react how to use the React frontend
                1. Do npm run build to create a "production build" of the frontend
                2. Copy the above directory into the BACKEND directory
                3. Tell expressJS (Backend) to use the BUILD folder with the line - app.use(express.static('build'))
                4. Can use scripts to automate a lot of this work, see FullStackOpen Part3/PartB/Streamlining
                    4a. Or look at part3/notes/package.json scripts for more concrete example
    Part C
        - MongoDB
            - Create a cluster for the project and connect using Application.
                - Need to run "Npm install mongoose" to handle the connections. See fso/part3/notes/mongo.js for example
            - Mongo technically doesn't need a schema for entries, but it's wise to do so
Part 4
    -Part A
        - Structure express components into separate folders. Controllers is the backend routes, models is DB schema, utils is stuff like logging, connectivity configs, etc.
        - Just look at app and index and piece things together
        - TESTING
            - God to have a file that holds testing functions (utils/for_testing.js)
            - Use jest for now bc it's made by FB and works with React pretty well
            - Jest expects testing FILES to have .test in the name (palin.test.js)
            - Start with "test" functions in a testing file. Configure properly (see FSO/part4/parta/testing Node apps)
            - 